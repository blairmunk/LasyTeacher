# Generated by Django 5.2.3 on 2025-06-17 11:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnalogGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название группы')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
            ],
            options={
                'verbose_name': 'Группа аналогичных заданий',
                'verbose_name_plural': 'Группы аналогичных заданий',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=100, verbose_name='Отчество')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
            ],
            options={
                'verbose_name': 'Ученик',
                'verbose_name_plural': 'Ученики',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название работы')),
                ('duration', models.PositiveIntegerField(default=45, verbose_name='Время выполнения (минуты)')),
                ('variant_counter', models.PositiveIntegerField(default=0, verbose_name='Счётчик вариантов')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
            ],
            options={
                'verbose_name': 'Работа',
                'verbose_name_plural': 'Работы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название класса')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('students', models.ManyToManyField(blank=True, to='task_manager.student', verbose_name='Ученики')),
            ],
            options={
                'verbose_name': 'Класс',
                'verbose_name_plural': 'Классы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название события')),
                ('date', models.DateTimeField(verbose_name='Дата проведения')),
                ('status', models.CharField(choices=[('planned', 'Запланировано'), ('conducted', 'Проведено'), ('checked', 'Проверено'), ('graded', 'Оценено'), ('closed', 'Закрыто')], default='planned', max_length=20, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('student_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='task_manager.studentgroup', verbose_name='Класс')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='task_manager.work', verbose_name='Работа')),
            ],
            options={
                'verbose_name': 'Событие',
                'verbose_name_plural': 'События',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст задания')),
                ('answer', models.TextField(verbose_name='Ответ')),
                ('short_solution', models.TextField(blank=True, verbose_name='Краткое решение')),
                ('full_solution', models.TextField(blank=True, verbose_name='Полное решение')),
                ('hint', models.TextField(blank=True, verbose_name='Подсказка')),
                ('instruction', models.TextField(blank=True, verbose_name='Инструкция к выполнению')),
                ('section', models.CharField(max_length=200, verbose_name='Тематический раздел')),
                ('topic', models.CharField(max_length=200, verbose_name='Тема')),
                ('subtopic', models.CharField(blank=True, max_length=200, verbose_name='Подтема')),
                ('content_element', models.CharField(blank=True, max_length=100, verbose_name='Элемент содержания')),
                ('requirement_element', models.CharField(blank=True, max_length=100, verbose_name='Элемент требований')),
                ('task_type', models.CharField(choices=[('qualitative', 'Качественная задача'), ('computational', 'Расчётная задача'), ('theoretical', 'Теоретический вопрос'), ('practical', 'Практическое задание'), ('test', 'Тестовое задание')], max_length=20, verbose_name='Тип задания')),
                ('difficulty', models.IntegerField(choices=[(1, 'Подготовительный'), (2, 'Базовый'), (3, 'Повышенный'), (4, 'Высокий'), (5, 'Экспертный')], verbose_name='Сложность')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('analog_groups', models.ManyToManyField(blank=True, related_name='tasks', to='task_manager.analoggroup', verbose_name='Группы аналогов')),
            ],
            options={
                'verbose_name': 'Задание',
                'verbose_name_plural': 'Задания',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(verbose_name='Номер варианта')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('tasks', models.ManyToManyField(to='task_manager.task', verbose_name='Задания')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='task_manager.work', verbose_name='Работа')),
            ],
            options={
                'verbose_name': 'Вариант',
                'verbose_name_plural': 'Варианты',
                'ordering': ['work', 'number'],
                'unique_together': {('work', 'number')},
            },
        ),
        migrations.CreateModel(
            name='Mark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField(blank=True, null=True, verbose_name='Оценка')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='task_manager.event', verbose_name='Событие')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='task_manager.student', verbose_name='Ученик')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='task_manager.variant', verbose_name='Вариант')),
            ],
            options={
                'verbose_name': 'Отметка',
                'verbose_name_plural': 'Отметки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkAnalogGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField(default=1, verbose_name='Количество заданий')),
                ('analog_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='task_manager.analoggroup', verbose_name='Группа аналогов')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='task_manager.work', verbose_name='Работа')),
            ],
            options={
                'verbose_name': 'Группа заданий в работе',
                'verbose_name_plural': 'Группы заданий в работе',
                'unique_together': {('work', 'analog_group')},
            },
        ),
    ]

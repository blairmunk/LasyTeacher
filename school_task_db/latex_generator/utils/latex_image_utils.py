"""LaTeX —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""

from typing import Dict, List
from document_generator.utils.image_utils import prepare_images
from .latex_utils import sanitize_latex

def prepare_images_for_latex(task, output_dir) -> List[Dict]:
    """–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è LaTeX —Å minipage –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π"""
    print(f"üîç prepare_images_for_latex: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–¥–∞–Ω–∏–µ {task.id}")
    
    latex_images = []
    
    for image in task.images.all().order_by('order'):
        print(f"üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {image.id}, –ø–æ–∑–∏—Ü–∏—è: {image.position}")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏
        image_data = prepare_images(image, output_dir)
        
        if image_data:
            print(f"üîç prepare_images –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ: {list(image_data.keys())}")
            
            # –î–û–ë–ê–í–õ–Ø–ï–ú LaTeX —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            minipage_config = get_minipage_config(image_data['position'])
            print(f"üîç minipage_config: {minipage_config}")
            
            latex_images.append({
                **image_data,  # –ë–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ–±—â–µ–π —Ñ—É–Ω–∫—Ü–∏–∏
                'minipage_config': minipage_config,  # LaTeX —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            })
            print(f"üîç –î–æ–±–∞–≤–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ latex_images, –∏—Ç–æ–≥–æ: {len(latex_images)}")
        else:
            print(f"‚ùå prepare_images –≤–µ—Ä–Ω—É–ª None –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {image.id}")
    
    print(f"üîç prepare_images_for_latex –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç {len(latex_images)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    return latex_images

def get_minipage_config(position):
    """LaTeX —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è minipage –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    
    configs = {
        'right_40': {
            'layout': 'side_by_side',
            'text_width': '0.55\\textwidth',
            'image_width': '0.4\\textwidth',
            'text_align': '[t]',      
            'image_align': '[t]',
            'spacing': '\\hfill',
            'image_position': 'right',
            'vertical_adjust': '\\vspace*{-3em}',
        },
        'right_20': {
            'layout': 'side_by_side',
            'text_width': '0.75\\textwidth',
            'image_width': '0.2\\textwidth',
            'text_align': '[t]',      
            'image_align': '[t]',
            'spacing': '\\hfill',
            'image_position': 'right',
            'vertical_adjust': '\\vspace*{-3em}',
        },
        'bottom_100': {
            'layout': 'vertical',
            'text_width': '\\textwidth',
            'image_width': '\\textwidth',
            'image_align': '[c]',
            'spacing': '\\vspace{0.5cm}',
            'image_position': 'bottom',
            'center_image': True,
        },
        'bottom_70': {
            'layout': 'vertical',
            'text_width': '\\textwidth',
            'image_width': '0.7\\textwidth',
            'image_align': '[c]',
            'spacing': '\\vspace{0.5cm}',
            'image_position': 'bottom',
            'center_image': True,
        },
    }
    
    return configs.get(position, configs['bottom_70'])

def render_task_with_images(task_data, images):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç LaTeX –∫–æ–¥ –¥–ª—è –∑–∞–¥–∞–Ω–∏—è —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑—É—è minipage"""
    
    print(f"üîç render_task_with_images: –ø–æ–ª—É—á–µ–Ω–æ {len(images)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    
    if not images:
        print("üîç –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç")
        return task_data['text']
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    first_image = images[0]
    print(f"üîç –ü–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {list(first_image.keys())}")
    
    if 'minipage_config' not in first_image:
        print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: minipage_config –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")
        return task_data['text']
    
    config = first_image['minipage_config']
    print(f"üîç minipage_config: layout = {config['layout']}")
    
    if config['layout'] == 'side_by_side':
        print("üîç –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º side_by_side minipage")
        result = generate_side_by_side_minipage(task_data, first_image, config)
    else:
        print("üîç –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º vertical minipage")
        result = generate_vertical_minipage(task_data, first_image, config)
    
    print(f"üîç –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π LaTeX –∫–æ–¥ ({len(result)} —Å–∏–º–≤–æ–ª–æ–≤):")
    print("=" * 50)
    print(result)
    print("=" * 50)
    
    return result

def generate_side_by_side_minipage(task_data, image, config):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—É—é –∫–æ–º–ø–æ–Ω–æ–≤–∫—É —Å minipage"""
    
    text_align = config.get('text_align', '[t]')  
    vertical_adjust = config.get('vertical_adjust', '')
    
    latex_code = f"""
% –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –∫–æ–º–ø–æ–Ω–æ–≤–∫–∞ —Å minipage - —Ç–µ–∫—Å—Ç —Å–ª–µ–≤–∞, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∞
% –ò–°–ü–†–ê–í–õ–ï–ù–û: –æ–±–∞ –±–ª–æ–∫–∞ –≤—ã—Ä–æ–≤–Ω–µ–Ω—ã –ø–æ –≤–µ—Ä—Ö—É + –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ü–∏—è
\\noindent
\\begin{{minipage}}{text_align}{{{config['text_width']}}}
{task_data['text']}
\\end{{minipage}}
{config['spacing']}
\\begin{{minipage}}{config['image_align']}{{{config['image_width']}}}
{vertical_adjust}
\\centering
\\includegraphics[width=\\textwidth]{{{image['filename']}}}"""
    
    if image['caption']:
        # –ò–°–ü–†–ê–í–õ–ï–ù–û: –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        safe_caption = sanitize_latex(image['caption'])
        latex_code += f"""
\\\\[0.2cm]
\\small\\textit{{{safe_caption}}}"""
    
    latex_code += """
\\end{minipage}
"""
    
    return latex_code

def generate_vertical_minipage(task_data, image, config):
    """–ò–°–ü–†–ê–í–õ–ï–ù–û: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—É—é –∫–æ–º–ø–æ–Ω–æ–≤–∫—É —Å minipage"""
    
    latex_code = f"""
% –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –∫–æ–º–ø–æ–Ω–æ–≤–∫–∞ —Å minipage - —Ç–µ–∫—Å—Ç —Å–≤–µ—Ä—Ö—É, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–Ω–∏–∑—É
\\noindent
\\begin{{minipage}}{{{config['text_width']}}}
{task_data['text']}
\\end{{minipage}}

{config['spacing']}

"""
    
    if config.get('center_image', False):
        latex_code += """
% –ò–°–ü–†–ê–í–õ–ï–ù–û: —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
\\begin{center}
"""
    
    latex_code += f"""
\\begin{{minipage}}{config['image_align']}{{{config['image_width']}}}
\\centering
\\includegraphics[width=\\textwidth]{{{image['filename']}}}"""
    
    if image['caption']:
        # –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–û–ë–ê–í–õ–ï–ù–û —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è!
        safe_caption = sanitize_latex(image['caption'])
        latex_code += f"""
\\\\[0.2cm]
\\small\\textit{{{safe_caption}}}"""
    
    latex_code += """
\\end{minipage}"""
    
    if config.get('center_image', False):
        latex_code += """
\\end{center}"""
    
    return latex_code
"""Template tags –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–æ—Ä–º—É–ª"""

from django import template
from django.utils.safestring import mark_safe
from latex_generator.utils.formula_utils import formula_processor

register = template.Library()

@register.filter
def render_math(text):
    """–§–∏–ª—å—Ç—Ä –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–æ—Ä–º—É–ª –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ"""
    if not text:
        return ''
    
    # –î–ª—è –≤–µ–±-—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—Å—Ç –∫–∞–∫ –µ—Å—Ç—å
    # MathJax –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç $ –∏ $$ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    return mark_safe(text)

@register.filter  
def has_math(text):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ —Ñ–æ—Ä–º—É–ª—ã"""
    return formula_processor.has_math(text)

@register.filter
def math_count(text):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ä–º—É–ª –≤ —Ç–µ–∫—Å—Ç–µ"""
    return formula_processor.count_formulas(text)

@register.simple_tag
def math_indicator(text):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞–ª–∏—á–∏—è —Ñ–æ—Ä–º—É–ª"""
    if formula_processor.has_math(text):
        count = formula_processor.count_formulas(text)
        return mark_safe(f'<span class="badge bg-success formula-badge">üìê {count}</span>')
    return ''

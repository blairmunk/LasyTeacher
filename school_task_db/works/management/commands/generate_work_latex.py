import os
import subprocess
from pathlib import Path
from django.core.management.base import BaseCommand, CommandError
from django.conf import settings
from works.models import Work, Variant
from works.latex.generator import LaTeXGenerator

class Command(BaseCommand):
    help = '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è LaTeX/PDF –¥–ª—è —Ä–∞–±–æ—Ç—ã (–≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤ –æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ)'
    
    def add_arguments(self, parser):
        parser.add_argument('work_id', type=int, help='ID —Ä–∞–±–æ—Ç—ã')
        parser.add_argument(
            '--format',
            choices=['latex', 'pdf'],
            default='pdf',
            help='–§–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞: latex –∏–ª–∏ pdf'
        )
        parser.add_argument(
            '--output-dir',
            default='latex_output',
            help='–ü–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤'
        )
        parser.add_argument(
            '--with-answers',
            action='store_true',
            help='–î–æ–±–∞–≤–∏—Ç—å –ª–∏—Å—Ç –æ—Ç–≤–µ—Ç–æ–≤ –≤ –∫–æ–Ω—Ü–µ'
        )

    def handle(self, *args, **options):
        work_id = options['work_id']
        output_format = options['format']
        output_dir = Path(options['output_dir'])
        with_answers = options['with_answers']
        
        try:
            work = Work.objects.get(pk=work_id)
        except Work.DoesNotExist:
            raise CommandError(f'–†–∞–±–æ—Ç–∞ —Å ID {work_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –≤—ã–≤–æ–¥–∞
        output_dir.mkdir(exist_ok=True)
        
        variants = Variant.objects.filter(work=work).order_by('number')
        if not variants.exists():
            raise CommandError('–£ —Ä–∞–±–æ—Ç—ã –Ω–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤. –°–Ω–∞—á–∞–ª–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã.')
        
        self.stdout.write(f'üöÄ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è LaTeX –¥–ª—è —Ä–∞–±–æ—Ç—ã: {work.name}')
        self.stdout.write(f'üìã –ù–∞–π–¥–µ–Ω–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: {variants.count()}')
        
        generator = LaTeXGenerator(work, output_dir)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –û–î–ò–ù –¥–æ–∫—É–º–µ–Ω—Ç —Å–æ –í–°–ï–ú–ò –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏
        files = generator.generate_all_variants(variants, output_format, with_answers)
        
        self.stdout.write(
            self.style.SUCCESS(
                f'üéâ –ì–æ—Ç–æ–≤–æ! –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª —Å {variants.count()} –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏: {files}'
            )
        )

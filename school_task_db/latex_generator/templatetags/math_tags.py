"""Template tags –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–æ—Ä–º—É–ª —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫"""

from django import template
from django.utils.safestring import mark_safe
from django.utils.html import escape
from document_generator.utils.formula_utils import formula_processor

register = template.Library()

@register.filter
def render_math(text):
    """–§–∏–ª—å—Ç—Ä –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–æ—Ä–º—É–ª –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ"""
    if not text:
        return ''
    
    # –î–ª—è –≤–µ–±-—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—Å—Ç –∫–∞–∫ –µ—Å—Ç—å
    # MathJax –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç $ –∏ $$ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    return mark_safe(text)

@register.filter  
def has_math(text):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ —Ñ–æ—Ä–º—É–ª—ã"""
    return formula_processor.has_math(text)

@register.filter
def has_math_formulas(text):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Ç–µ–∫—Å—Ç –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–æ—Ä–º—É–ª—ã"""
    if not text:
        return False
    return formula_processor.has_math(text)

@register.filter  
def count_formulas(text):
    """–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ä–º—É–ª –≤ —Ç–µ–∫—Å—Ç–µ"""
    if not text:
        return 0
    return formula_processor.count_formulas(text)

@register.filter
def math_count(text):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ä–º—É–ª –≤ —Ç–µ–∫—Å—Ç–µ"""
    return formula_processor.count_formulas(text)

@register.filter
def math_errors(text):
    """–ù–û–í–û–ï: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫–∏ –≤ —Ñ–æ—Ä–º—É–ª–∞—Ö"""
    if not text:
        return []
    
    processed = formula_processor.process_text_safe(text)
    return processed.get('errors', [])

@register.filter
def math_warnings(text):
    """–ù–û–í–û–ï: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º—É–ª–∞—Ö"""
    if not text:
        return []
    
    processed = formula_processor.process_text_safe(text)
    return processed.get('warnings', [])

@register.filter
def has_math_errors(text):
    """–ù–û–í–û–ï: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∏ –≤ —Ñ–æ—Ä–º—É–ª–∞—Ö"""
    if not text:
        return False
    
    processed = formula_processor.process_text_safe(text)
    return processed.get('has_errors', False)

@register.filter
def has_math_warnings(text):
    """–ù–û–í–û–ï: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º—É–ª–∞—Ö"""
    if not text:
        return False
    
    processed = formula_processor.process_text_safe(text)
    return processed.get('has_warnings', False)

@register.simple_tag
def math_indicator(text):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞–ª–∏—á–∏—è —Ñ–æ—Ä–º—É–ª —Å –∏–Ω–¥–∏–∫–∞—Ü–∏–µ–π –æ—à–∏–±–æ–∫"""
    if not formula_processor.has_math(text):
        return ''
    
    count = formula_processor.count_formulas(text)
    processed = formula_processor.process_text_safe(text)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∏–ª—å –±–µ–π–¥–∂–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–ª–∏—á–∏—è –æ—à–∏–±–æ–∫
    if processed.get('has_errors', False):
        badge_class = 'bg-danger'
        icon = '‚ö†Ô∏è'
        title = f"–§–æ—Ä–º—É–ª: {count}. –ï—Å—Ç—å –æ—à–∏–±–∫–∏!"
    elif processed.get('has_warnings', False):
        badge_class = 'bg-warning text-dark'
        icon = '‚ö°'
        title = f"–§–æ—Ä–º—É–ª: {count}. –ï—Å—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è"
    else:
        badge_class = 'bg-success'
        icon = 'üìê'
        title = f"–§–æ—Ä–º—É–ª: {count}. –í—Å–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    
    return mark_safe(
        f'<span class="badge {badge_class} formula-badge" title="{title}">'
        f'{icon} {count}</span>'
    )

@register.inclusion_tag('math/formula_errors.html')
def show_formula_errors(text, show_warnings=True):
    """–ù–û–í–û–ï: –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–∞—Ö —Ñ–æ—Ä–º—É–ª"""
    if not text:
        return {'errors': [], 'warnings': [], 'formulas': []}
    
    processed = formula_processor.process_text_safe(text)
    
    return {
        'errors': processed.get('errors', []),
        'warnings': processed.get('warnings', []) if show_warnings else [],
        'formulas': processed.get('formulas', []),
        'has_errors': processed.get('has_errors', False),
        'has_warnings': processed.get('has_warnings', False),
    }

@register.inclusion_tag('math/formula_preview.html')
def formula_preview(text, max_formulas=3):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–≤—å—é —Ñ–æ—Ä–º—É–ª –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å –∏–Ω–¥–∏–∫–∞—Ü–∏–µ–π —Å—Ç–∞—Ç—É—Å–∞"""
    if not text:
        return {'formulas': [], 'has_issues': False}
    
    processed = formula_processor.process_text_safe(text)
    all_formulas = processed.get('formulas', [])
    
    return {
        'formulas': all_formulas[:max_formulas],
        'total_count': len(all_formulas),
        'has_more': len(all_formulas) > max_formulas,
        'has_errors': processed.get('has_errors', False),
        'has_warnings': processed.get('has_warnings', False),
    }

@register.simple_tag
def math_status_alert(text, alert_id=None):
    """–ù–û–í–û–ï: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç alert —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å—Ç–∞—Ç—É—Å–µ —Ñ–æ—Ä–º—É–ª"""
    if not formula_processor.has_math(text):
        return ''
    
    processed = formula_processor.process_text_safe(text)
    
    if not processed.get('has_errors') and not processed.get('has_warnings'):
        return ''  # –í—Å–µ —Ö–æ—Ä–æ—à–æ, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º alert
    
    alert_id = alert_id or 'math-alert'
    errors = processed.get('errors', [])
    warnings = processed.get('warnings', [])
    
    if errors:
        alert_class = 'alert-danger'
        icon = 'üö®'
        title = '–û—à–∏–±–∫–∏ –≤ —Ñ–æ—Ä–º—É–ª–∞—Ö'
        items = errors
    elif warnings:
        alert_class = 'alert-warning'
        icon = '‚ö†Ô∏è'
        title = '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º—É–ª–∞—Ö'
        items = warnings
    else:
        return ''
    
    items_html = ''.join([f'<li>{escape(item)}</li>' for item in items])
    
    return mark_safe(f'''
    <div class="alert {alert_class} alert-dismissible fade show" role="alert" id="{alert_id}">
        <h6>{icon} {title}</h6>
        <ul class="mb-0">
            {items_html}
        </ul>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="–ó–∞–∫—Ä—ã—Ç—å"></button>
    </div>
    ''')
